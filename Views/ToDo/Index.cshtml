@model IPagedList<ExercicesEFCore.Models.ToDo>
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@{
    ViewData["Title"] = "Index";
}

<h1>ToDo</h1>
<h3>Hello @ViewBag.Username</h3>
<a href="/Auth/Logout">Se déconnecter</a>
<p>
    <a asp-action="Create">Créer un nouvel élément</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Titre
            </th>
            <th>
                Description
            </th>
            <th>
                Statut
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @if (item.IsDone) {
                        <button type="button" class="btn btn-info"><a asp-action="Edit" asp-route-id="@item.Id" class="link-dark text-decoration-none">Terminée</a></button>
                }
                else {
                        <button type="button" class="btn btn-warning"><a asp-action="Edit" asp-route-id="@item.Id" class="link-dark text-decoration-none">A faire</a></button>
                }
            </td>
            <td>
                    <button type="button" class="btn btn-danger"><a asp-action="Delete" asp-route-id="@item.Id" class="link-light text-decoration-none">Supprimer</a></button>
            </td>
        </tr>
}
    </tbody>
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",new { page }))